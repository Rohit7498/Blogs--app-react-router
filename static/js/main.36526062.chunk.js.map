{"version":3,"sources":["pages/Home.js","pages/Posts.js","pages/PostDetails.js","Nav.js","pages/AllPosts.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","marginLeft","spacing","width","Home","useState","users","setUsers","fiteredUsers","setFilteredUsers","classes","useEffect","fetchUsers","a","fetch","data","json","console","log","className","noValidate","autoComplete","TextField","id","label","onChange","e","curUserText","target","value","curFilteredUsers","length","regex","RegExp","sort","filter","user","test","name","curCompanyText","company","map","to","style","textDecoration","Posts","match","posts","setPosts","filteredPosts","setFilteredPosts","fetchPosts","params","userPosts","href","post","curPostText","curFilteredPosts","title","PostDetails","setPost","comments","setComments","showComments","setShowComments","fetchSpecificPost","fetchComments","singlePost","handleDelete","method","resp","body","Button","variant","size","color","onClick","prevShowComments","userId","startIcon","comment","email","Nav","isDark","setDark","fontSize","display","backgroundColor","prevState","document","AllPosts","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.36526062.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './style.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      marginLeft: theme.spacing(10),\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default function Home() {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [fiteredUsers, setFilteredUsers] = useState([]);\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    }, []);//on mount\r\n\r\n    const fetchUsers = async ()=>{\r\n        try {\r\n            const data = await fetch('https://jsonplaceholder.typicode.com/users');\r\n            const users = await data.json();\r\n            setUsers(users);\r\n            setFilteredUsers(users);\r\n            console.log(users);    \r\n        } catch (error) {\r\n            console.log(error);    \r\n        }\r\n        \r\n    }\r\n    const filterUsers = (e)=>{\r\n        let curUserText = e.target.value;\r\n        console.log(e.target.value);\r\n        let curFilteredUsers = users;\r\n        if(curUserText.length > 0){\r\n            const regex = new RegExp(`^${curUserText}`, 'i');\r\n            curFilteredUsers = users.sort().filter(user=>regex.test(user.name));\r\n        }\r\n        setFilteredUsers(()=>curFilteredUsers);\r\n    }\r\n\r\n    const filterCompanies = (e)=>{\r\n        let curCompanyText = e.target.value;\r\n        console.log(e.target.value);\r\n        let curFilteredUsers = users;\r\n        if(curCompanyText.length > 0){\r\n            const regex = new RegExp(`^${curCompanyText}`, 'i');\r\n            curFilteredUsers = users.sort().filter(user=>regex.test(user.company.name));\r\n        }\r\n        setFilteredUsers(()=>curFilteredUsers);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Home Page</h1>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField id=\"standard-basic\" label=\"User Name\" onChange={filterUsers} />\r\n                <TextField id=\"standard-basic\" label=\"Company Name\" onChange={filterCompanies} />\r\n            </form>\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Company Name</th>\r\n                        <th>Blog Posts</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {fiteredUsers.map(user=>(\r\n                        <tr key={user.id}>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.company.name}</td>\r\n                            <td><Link to={`/${user.id}`}  style={{ textDecoration: 'none'}}>Link to Posts</Link></td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function Posts({ match }) {\r\n    \r\n    const [posts, setPosts] = useState([]);\r\n    const [filteredPosts, setFilteredPosts] = useState([]);\r\n    \r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    const fetchPosts = async ()=>{\r\n        try {\r\n            const data = await fetch(`https://jsonplaceholder.typicode.com/users/${match.params.id}/posts`);\r\n            const userPosts = await data.json();\r\n            \r\n            //console.log(Object.prototype.toString.call(posts));\r\n            console.log(userPosts);\r\n            setPosts(userPosts);\r\n            setFilteredPosts(userPosts);    \r\n        } catch (error) {\r\n            console.log(error);    \r\n        }\r\n        \r\n    }\r\n\r\n    const filterPosts = (e)=>{\r\n        let curPostText = e.target.value;\r\n        let curFilteredPosts = posts;\r\n        if(curPostText.length > 0){\r\n            const regex = new RegExp(`^${curPostText}`, 'i');\r\n            curFilteredPosts = posts.sort().filter(post=>regex.test(post.title));\r\n        }\r\n        setFilteredPosts(()=>curFilteredPosts);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>User {match.params.id} posts </h1>\r\n\r\n            <div className=\"pagination\">\r\n                <a href=\"#\">&laquo;</a>\r\n                {posts.map(post=>(\r\n                    <Link id=\"links\" key={post.id} to={`/posts/${post.id}`}>{post.id}</Link>\r\n                ))}\r\n                <a href=\"#\">&raquo;</a>\r\n            </div>\r\n            <br /><br />\r\n            <p><b>*Use Pagination or link to go to post details</b></p>\r\n\r\n            <TextField id=\"standard-basic\" label=\"Post Title\" onChange={filterPosts} />\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Post No.</th>\r\n                        <th>Post Tiltle</th>\r\n                        <th>Post Details</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {filteredPosts.map(post=>(\r\n                        <tr key={post.id}>\r\n                            <td>{post.id}</td>\r\n                            <td>{post.title}</td>\r\n                            <td><Link id=\"links\" to={`/posts/${post.id}`}>Go to post {post.id}</Link></td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport default function PostDetails({match}) {\r\n\r\n    const [post, setPost] = useState({});\r\n    const [comments, setComments] = useState([]);\r\n    const [showComments, setShowComments] = useState(()=>false);\r\n\r\n    useEffect(()=>{\r\n\r\n        fetchSpecificPost();\r\n        fetchComments();\r\n\r\n    }, []);\r\n\r\n    const fetchSpecificPost = async ()=>{\r\n        try {\r\n            const data = await fetch(`https://jsonplaceholder.typicode.com/posts/${match.params.id}`);\r\n            const singlePost = await data.json();\r\n            console.log(singlePost);\r\n            setPost(singlePost);        \r\n        } catch (error) {\r\n            console.log(error);            \r\n        }\r\n        \r\n    }\r\n\r\n    const fetchComments = async ()=>{\r\n        const data = await fetch(`https://jsonplaceholder.typicode.com/posts/${match.params.id}/comments`);\r\n        const comments = await data.json();\r\n        console.log(comments);\r\n        setComments(comments);\r\n\r\n    }\r\n\r\n    const handleClick = ()=>{\r\n        setShowComments(prevShowComments => !prevShowComments);\r\n    }\r\n\r\n    const renderComments = ()=>{\r\n        return (\r\n            <>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Comment</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {comments.map(comment=>(\r\n                        <tr key={comment.id}>\r\n                            <td>{comment.name}</td>\r\n                            <td>{comment.email}</td>\r\n                            <td>{comment.body}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            </>\r\n        )\r\n    }\r\n    const handleDelete = async ()=>{\r\n        const data = await fetch(`https://jsonplaceholder.typicode.com/posts/${match.params.id}`,\r\n                                {method:'DELETE'});\r\n        console.log(data);\r\n        const resp = await data.json();\r\n        console.log(resp);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Post {post.id} details</h1>\r\n\r\n            <br />\r\n \r\n            <article>\r\n                <h2>{post.title}</h2>\r\n                <p>{post.body}</p>\r\n            </article>\r\n            \r\n            <Button variant=\"contained\" size=\"medium\" color=\"primary\" onClick={handleClick}>\r\n                {!showComments ? 'Show Comments' : 'Hide Comments'}\r\n            </Button>\r\n            &nbsp;\r\n            &nbsp;\r\n            <Link to={`/${post.userId}`}>\r\n                <Button variant=\"contained\" size=\"medium\" color=\"secondary\" onClick={handleDelete} startIcon={<DeleteIcon />} >\r\n                    Delete\r\n                </Button>\r\n            </Link>\r\n            \r\n\r\n            \r\n            {showComments && renderComments()}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\n\r\n\r\nexport default function Nav() {\r\n    const [isDark, setDark] = useState(false);\r\n\r\n    const toggleMode = ()=>{\r\n        setDark(prevState => !prevState);\r\n        if(isDark){\r\n            document.body.style.backgroundColor='darkgray';\r\n            document.body.style.color='white';\r\n            \r\n        }else{\r\n            document.body.style.backgroundColor='white';\r\n            document.body.style.color='black';\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <Link to='/' style={{ textDecoration: 'none', color:'white' }} >\r\n                        <LocalLibraryIcon fontSize=\"medium\" /> <h3 style={{display:'inline-block'}} >Blog Posts</h3>\r\n                </Link>\r\n                \r\n                <ul className=\"nav-links\">\r\n                    <Link to='/' style={{ textDecoration: 'none', color:'white' }} >\r\n                        <li className=\"links\">Home</li>\r\n                    </Link>\r\n                    <Link to='/posts' style={{ textDecoration: 'none', color:'white' }} >\r\n                        <li className=\"links\">All Posts</li>\r\n                    </Link>\r\n                    <Button variant=\"contained\" size=\"medium\"  style={{backgroundColor: 'darkgreen', color:'white'}} \r\n                    onClick={toggleMode}>\r\n                        {isDark ? 'Dark Mode' : 'Light Mode'}\r\n                    </Button>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\n\r\n  \r\n\r\nexport default function AllPosts() {\r\n    const [posts, setPosts] = useState([]);\r\n    \r\n\r\n    useEffect(()=>{\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    const fetchPosts = async ()=>{\r\n        try {\r\n            const data = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n            const posts = await data.json();\r\n            console.log(posts);\r\n            setPosts(posts);    \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <h1>All Posts</h1>\r\n\r\n            <br /><br />\r\n            <p><b>*Use Post No. Link to go to details</b></p>\r\n\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Post No.</th>\r\n                        <th>Post Tiltle</th>\r\n                        <th>Post Details</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {posts.map(post=>(\r\n                        <tr key={post.id}>\r\n                            <td>{post.id}</td>\r\n                            <td>{post.title}</td>\r\n                            <td><Link id=\"links\" to={`/posts/${post.id}`}>Go to post {post.id}</Link></td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n","import './App.css';\nimport {Route, Switch, BrowserRouter as Router} from 'react-router-dom';\nimport Home from './pages/Home';\nimport Posts from './pages/Posts';\nimport PostDetails from './pages/PostDetails';\nimport Nav from './Nav';\nimport AllPosts from './pages/AllPosts';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n    <Router>\n    <Nav />\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/posts' exact component={AllPosts} />\n        <Route path='/:id' exact component={Posts}/>\n        <Route path='/posts/:id' component={PostDetails} />\n\n      </Switch>\n    </Router>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}